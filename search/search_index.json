{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"SAFETY/","title":"Safety","text":"<p>openpilot is an Adaptive Cruise Control (ACC) and Automated Lane Centering (ALC) system. Like other ACC and ALC systems, openpilot is a failsafe passive system and it requires the driver to be alert and to pay attention at all times.</p> <p>In order to enforce driver alertness, openpilot includes a driver monitoring feature that alerts the driver when distracted.</p> <p>However, even with an attentive driver, we must make further efforts for the system to be safe. We repeat, driver alertness is necessary, but not sufficient, for openpilot to be used safely and openpilot is provided with no warranty of fitness for any purpose.</p> <p>openpilot is developed in good faith to be compliant with FMVSS requirements and to follow industry standards of safety for Level 2 Driver Assistance Systems. In particular, we observe ISO26262 guidelines, including those from pertinent documents released by NHTSA. In addition, we impose strict coding guidelines (like MISRA C : 2012) on parts of openpilot that are safety relevant. We also perform software-in-the-loop, hardware-in-the-loop and in-vehicle tests before each software release.</p> <p>Following Hazard and Risk Analysis and FMEA, at a very high level, we have designed openpilot ensuring two main safety requirements.</p> <ol> <li>The driver must always be capable to immediately retake manual control of the vehicle,    by stepping on the brake pedal or by pressing the cancel button.</li> <li>The vehicle must not alter its trajectory too quickly for the driver to safely    react. This means that while the system is engaged, the actuators are constrained    to operate within reasonable limits<sup>1</sup>. </li> </ol> <p>For additional safety implementation details, refer to panda safety model. For vehicle specific implementation of the safety concept, refer to panda/board/safety/.</p> <p>Extra note: comma.ai strongly discourages the use of openpilot forks with safety code either missing or   not fully meeting the above requirements.</p> <ol> <li> <p>For these actuator limits we observe ISO11270 and ISO15622. Lateral limits described there translate to 0.9 seconds of maximum actuation to achieve a 1m lateral deviation.\u00a0\u21a9</p> </li> </ol>"},{"location":"branches/definitions/","title":"Definitions","text":"Branch Definition Supported Devices Description Stability/Readiness <code>release</code> Release branch Comma 3X Stable release branch. After testing on <code>staging</code>, updates are pushed here and published publicly. Ready to Use: Highly stable, recommended for most users. <code>staging</code> Staging branch Comma 3X Pre-release testing branch. Community feedback is essential to identify issues before public release. Varied Stability: Generally stable, but intended for testing before public release. <code>dev</code> Development branches Comma 3X Experimental branch with the latest features and bug fixes brought in manually. Expect bugs and braking changes. Experimental: Least stable, suitable for testers and developers. <code>master</code> Primary development branch Comma 3X All Pull Requests are merged here for future releases. CI automatically strips, minifies, and pushes changes to <code>staging</code>. Running the <code>master</code> branch is suitable for development purposes but not recommended for non-development use. For Development Use: Suitable for developers, may be unstable for general use. <code>release-tici</code> Release branch Comma 3 Stable release branch. After testing on <code>staging-tici</code>, updates are pushed here and published publicly. Ready to Use: Highly stable, recommended for most users. <code>staging-tici</code> Staging branch Comma 3 Pre-release testing branch. Community feedback is essential to identify issues before public release. Varied Stability: Generally stable, but intended for testing before public release. <p>Tip</p> <p>Your feedback is invaluable. Testers, even without software development experience, are encourage to run <code>dev</code> or <code>staging</code> and report issues.</p>"},{"location":"branches/recommended-branches/","title":"Recommended Branches","text":"Comma 3XComma 3 Branch Installation URL Change Logs <code>release</code> Coming Soon Coming Soon <code>staging</code> install.sunnypilot.ai/staging CHANGELOG <code>dev</code> install.sunnypilot.ai/dev CHANGELOG Branch Installation URL Change Logs <code>release-tici</code> Coming Soon Coming Soon <code>staging-tici</code> install.sunnypilot.ai/staging-tici CHANGELOG"},{"location":"community/CONTRIBUTING/","title":"How to contribute","text":"<p>Our software is open source so you can solve your own problems without needing help from others. And if you solve a problem and are so kind, you can upstream it for the rest of the world to use. Check out our post about open-sourcing and externalization. Development activity is coordinated through our GitHub Issues, GitHub Discussions, and Discord.</p>"},{"location":"community/CONTRIBUTING/#getting-started","title":"Getting Started","text":"<ul> <li>Setup your development environment</li> <li>Read about the development workflow</li> <li>Join our Discord</li> <li>Docs are at https://docs.sunnypilot.ai and https://www.sunnypilot.ai/blog</li> </ul>"},{"location":"community/CONTRIBUTING/#what-contributions-are-we-looking-for","title":"What contributions are we looking for?","text":"<p>sunnypilot's priorities are safety, stability, quality, and features, in that order. Aligning with comma's ideals, part of sunnypilot's mission is to solve self-driving cars while delivering shippable intermediaries, and all development is towards that goal.</p>"},{"location":"community/CONTRIBUTING/#what-gets-merged","title":"What gets merged?","text":"<p>The probability of a pull request being merged is a function of its value to the project and the effort it will take us to get it merged. If a PR offers some value but will take lots of time to get merged, it will be closed. Simple, well-tested bug fixes are the easiest to merge, and new features are the hardest to get merged. </p> <p>All of these are examples of good PRs:</p> <ul> <li>typo fix</li> <li>removing unused code</li> <li>simple car model port</li> <li>car brand port</li> <li>UI design changes</li> <li>new features</li> </ul>"},{"location":"community/CONTRIBUTING/#what-doesnt-get-merged","title":"What doesn't get merged?","text":"<ul> <li>arbitrary style changes: code is art, and it's up to the author to make it beautiful</li> <li>500+ line PRs: clean it up, break it up into smaller PRs, or both</li> <li>PRs without a clear goal: every PR must have a singular and clear goal</li> </ul>"},{"location":"community/CONTRIBUTING/#first-contribution","title":"First contribution","text":"<p>Check out any good first issue from commaai's openpilot to get started.</p>"},{"location":"community/CONTRIBUTING/#what-do-i-need-to-contribute","title":"What do I need to contribute?","text":"<p>A lot of sunnypilot work requires only a PC, and some requires a comma device. Most car-related contributions require access to that car, plus a comma device installed in the car.</p>"},{"location":"community/CONTRIBUTING/#pull-requests","title":"Pull Requests","text":"<p>Pull requests should be against the <code>master</code> branch. If you're unsure about a contribution, feel free to open a discussion, issue, or draft PR to discuss the problem you're trying to solve.</p> <p>A good pull request has all of the following:</p> <ul> <li>a clearly stated purpose</li> <li>every line changed directly contributes to the stated purpose</li> <li>verification, i.e. how did you test your PR?</li> <li> <p>justification</p> <ul> <li>if you've optimized something, post benchmarks to prove it's better</li> <li>if you've improved your car's tuning, post before and after plots</li> </ul> </li> <li> <p>passes the CI tests</p> </li> </ul>"},{"location":"community/CONTRIBUTING/#contributing-without-code","title":"Contributing without Code","text":"<ul> <li>Report bugs in GitHub issues.</li> <li>Report driving issues in the <code>#general</code> Discord channel.</li> <li>Consider opting into driver camera uploads to improve the driver monitoring model.</li> <li>Connect your device to Wi-Fi regularly, so that comma can pull data for training better driving models.</li> <li>Run the <code>staging-c3</code> branch and report issues. This branch is like <code>master</code> but it's built just like a release.</li> </ul>"},{"location":"community/WORKFLOW/","title":"sunnypilot development workflow","text":"<p>Aside from the ML models, most tools used for sunnypilot development are in this repo.</p> <p>Most development happens on normal Ubuntu workstations, and not in cars or directly on comma devices. See the setup guide for getting your PC setup for sunnypilot development.</p>"},{"location":"community/WORKFLOW/#quick-start","title":"Quick start","text":"<pre><code># get the latest stuff\ngit pull\ngit lfs pull\ngit submodule update --init --recursive\n\n# update dependencies\ntools/ubuntu_setup.sh\n\n# build everything\nscons -j$(nproc)\n\n# build just the ui with either of these\nscons -j8 selfdrive/ui/\ncd selfdrive/ui/ &amp;&amp; scons -u -j8\n\n# test everything\npytest\n\n# test just logging services\ncd system/loggerd &amp;&amp; pytest .\n\n# run the linter\nop lint\n</code></pre>"},{"location":"community/WORKFLOW/#testing","title":"Testing","text":""},{"location":"community/WORKFLOW/#automated-testing","title":"Automated Testing","text":"<p>All PRs and commits are automatically checked by GitHub Actions. Check out <code>.github/workflows/</code> for what GitHub Actions runs. Any new tests should be added to GitHub Actions.</p>"},{"location":"community/WORKFLOW/#code-style-and-linting","title":"Code Style and Linting","text":"<p>Code is automatically checked for style by GitHub Actions as part of the automated tests. You can also run these tests yourself by running <code>pre-commit run --all</code>.</p>"},{"location":"community/reporting-a-bug/","title":"Bug Reports","text":"<p>sunnypilot is an actively maintained project that we constantly strive to improve. With project of this size and complexity,  bugs may occur. If you think you have discovered a bug, you can help us by submitting an issue  in comma's public issue tracker,  sunnypilot's public issue tracker or on our Discord, following this guide.</p>"},{"location":"community/reporting-a-bug/#before-creating-an-issue","title":"Before creating an issue","text":"<p>With more than 2,500 users, issues are created frequently. The maintainers of this project are trying very hard to keep  the number of open issues and reports down by fixing bugs as fast as possible. By following this guide, you will know  exactly what information we need to help you quickly.</p> <p>But first, please do the following things before creating an issue.</p>"},{"location":"community/reporting-a-bug/#upgrade-to-the-latest-version","title":"Upgrade to the latest version","text":"<p>Chances are that the bug you discovered was already fixed in a subsequent version. Thus, before reporting an issue,  ensure that you're running the latest release version of sunnypilot.  Please consult our installation guide to learn how to upgrade to the latest version.</p> <p>Bug fixes are not backported</p> <p>Please understand that only bugs that occur in the latest version of sunnypilot will be addressed. Also, to reduce  duplicate efforts, fixes cannot be backported to earlier versions.</p>"},{"location":"community/reporting-a-bug/#remove-customizations","title":"Remove customizations","text":"<p>If you're using customized features, such as your own tweaks of the features, please remove them from the branch  you are testing from before reporting a bug. We can't offer official support for bugs that might hide in your implementations,  so make sure to omit any customizations from the version being tested.</p> <p>If, after removing the customizations, the bug is gone, the bug is likely caused by your customizations. A good idea is  to add them back gradually to narrow down the root cause of the problem If you did a major version upgrade, make sure  you adjusted all customizations you have implemented.</p> <p>Tip</p> <p>If you are an advanced user, you could also utilize <code>git bisect</code>  to perform a binary search in the history to find a particular regression.</p> <p>Customizations mentioned in our documentation</p> <p>A handful of the features sunnypilot offers can only be implemented with customizations. if you find a bug in any of  the customizations that our documentations explicitly mentioned, you are, of course, encouraged to report it.</p> <p>Don't be shy to ask on our Discord for help if you run into problems.</p>"},{"location":"community/reporting-a-bug/#search-for-solutions","title":"Search for solutions","text":"<p>At this stage, we know that the problem persists in the latest version and is not caused by any of your customizations.  However, the problem might result from a small typo or a syntactical error in the source code, e.g., <code>selfdrive/car/interfaces.py</code>.</p> <p>Now, before you go through the trouble of creating a bug report that is answered and closed right away with a link to the relevant documentation section or another already reported or closed issue or discussion, you can save time for us  and yourself by doing some research:</p> <ol> <li>Search our documentation and look for the relevant sections that could be related to your problem. If found, make     sure that the settings are configured correctly.</li> <li>Search our Discord to learn if other users are struggling with similar problems and work together with     our     great community towards a solution. Many problems are solved there.</li> <li>Search comma's openpilot issue tracker, as another user might     already have reported the same problem that may exist in    stock openpilot, and there might even be a known workaround or fix for it. Thus, no need to create a new issue.</li> <li>Search sunnypilot's issue tracker, as another user might already have     reported the same problem, and there    might even be a known workaround or fix for it. Thus, no need to create a new issue.</li> </ol> <p>Keep track of all search terms and relevant links, you'll need them in the bug report.<sup>1</sup></p> <p>At this point, when you still haven't found a solution to your problem, we encourage you to report the issue on our  Discord because it's now very likely that you stumbled over something we don't know  yet. Read the following section  to learn how to create a complete and helpful bug report.</p>"},{"location":"community/reporting-a-bug/#issue-template","title":"Issue template","text":"<p>We have created an issue template to make the bug reporting process as simple as possible, and more efficient for our community and us.</p> <ul> <li>Title</li> <li>Contextoptional</li> <li>Bug description</li> <li>Related links</li> <li>Reproduction</li> <li>Steps to reproduce</li> <li>Checklist</li> </ul>"},{"location":"community/reporting-a-bug/#title","title":"Title","text":"<p>A good title is short and descriptive. It should be a one-sentence executive summary of the issue, so the impact and severity of the bug you want to report can be inferred from the title.</p> Example Clear Speed Limit Control (SLC) stuck in <code>preActive</code> when engaged Wordy The Speed Limit Control (SLC) remains in the <code>preActive</code> state when longitudinal it's supposed to be engaged Unclear SLC does not work Useless Help"},{"location":"community/reporting-a-bug/#context","title":"Context optional","text":"<p>Before describing the bug, you can provide additional context for us to understand what you were trying to achieve. Explain the circumstances in which you're using sunnypilot, and what you think might be relevant. Don't write  about the bug here.</p> <p>Why this might be helpful</p> <p>Some errors only manifest in specific settings, environments or edge cases, for example, when the feature is not available to certain cars.</p>"},{"location":"community/reporting-a-bug/#bug-description","title":"Bug description","text":"<p>Now, to the bug you want to report. Provide a clear, focused, specific, and concise summary of the bug you encountered.  Explain why you think this is a bug that should be reported to sunnypilot, and not to one of its dependencies.<sup>2</sup> Adhere to the following principles:</p> <ul> <li> <p>Explain the what, not the how \u2013 don't explain     how to reproduce the bug here, we're getting there.     Focus on articulating the problem and its impact as clearly as possible.</p> </li> <li> <p>Keep it short and concise \u2013 if the bug can be precisely explained in one     or two sentences, perfect. Don't inflate it \u2013 maintainers and future users     will be grateful for having to read less.</p> </li> <li> <p>One bug at a time \u2013 if you encounter several unrelated bugs, please     create separate issues for them. Don't report them in the same issue, as     this makes attribution difficult.</p> </li> </ul> <p> Stretch goal \u2013 if you found a workaround or a way to fix the bug, you can help other users temporarily mitigate the problem before we maintainers can fix the bug in our code base.</p> <p>Why we need this</p> <p>In order for us to understand the problem, we need a clear description of it and quantify its impact, which is  essential for triage and prioritization.</p>"},{"location":"community/reporting-a-bug/#related-links","title":"Related links","text":"<p>Of course, prior to reporting a bug, you have read our documentation and could not find a working solution. Please share links to all sections of our documentation that might be relevant to the bug, as it helps us gradually improve it.</p> <p>Additionally, since you have searched comma's issue tracker, sunnypilot's issue tracker or Discord before reporting an issue, and have possibly found several issues or discussions, include those as well. Every link to an issue or discussion creates a backlink, guiding us maintainers and other users in the future.</p> <p> Stretch goal \u2013 if you also include the search terms you used when searching for a solution to your problem, you make it easier for us maintainers to improve the documentation.</p>"},{"location":"community/reporting-a-bug/#reproduction","title":"Reproduction","text":"<p>A minimal reproduction is at the heart of every well-written bug report, as it allows us maintainers to instantly recreate the necessary conditions to inspect the bug to quickly find its root cause. It's a proven fact that issues with concise and small reproductions can be fixed much faster.</p> <p>After you have created the reproduction, take note of your comma Dongle ID. It will be used during the bug  report.</p> <p>Why we need this</p> <p>If an issue contains no minimal reproduction or just a link to a repository with thousands of files, the  maintainers would need to invest a lot of time into trying to recreate the right conditions to even inspect the  bug, let alone fix it.</p> <p>Don't share links to repositories</p> <p>While we know that it is a good practice among developers to include a link to a repository with the bug report, we currently don't support those in our process. The reason is that the reproduction, which is automatically produced by the route ID contains all the necessary environment information that is often forgotten to be included.</p> <p>Additionally, there are many non-technical users of sunnypilot that have trouble creating repositories.</p>"},{"location":"community/reporting-a-bug/#steps-to-reproduce","title":"Steps to reproduce","text":"<p>At this point, you provided us with enough information to understand the bug and provided us with a reproduction that we could run and inspect. However, when we check your reproduction, it might not be immediately apparent how we can see the bug in action.</p> <p>Thus, please list the specific steps we should follow when running your reproduction to observe the bug. Keep the steps short and concise, and make sure not to leave anything out. Use simple language as you would explain it to a five-year-old, and focus on continuity.</p> <p>Why we need this</p> <p>We must know how to navigate your reproduction in order to observe the bug, as some bugs only occur at certain viewports or in specific conditions.</p>"},{"location":"community/reporting-a-bug/#uploading-logs-and-preserving-routes","title":"Uploading logs and preserving routes","text":"<p>After reproducing the bug, please follow these steps to upload the necessary logs and preserve the routes.</p> <ol> <li> <p>Ensure the route is fully uploaded at comma Connect. We cannot look    into issues without routes, or at least a comma Dongle ID.</p> <ol> <li>Visit comma Connect, select the route with the issue reproduced.</li> <li>Under the \"Files\" button, locate \"All logs\". Click \"Upload x files\".</li> <li>View the upload queue, and confirm that all raw logs are uploaded.</li> </ol> <p>Note</p> <p>Sometimes when the qlogs of the route are still being uploaded, some raw logs may not be available to  request for upload. Refresh the page a few times once you have confirmed all qlogs have been uploaded,  then try to upload all raw logs again if available.</p> </li> <li> <p>Share your Dongle ID with sunnypilot on comma Connect.</p> <ol> <li>Visit comma Connect, navigate to the gear icon.</li> <li>Select \"Share by email\", and enter <code>support@sunnypilot.ai</code>.</li> <li>Confirm the sharing by clicking the share icon again.</li> <li>Set the device name to your vehicle's year/make/model and your Discord username, so it can be easily identified.</li> </ol> </li> <li> <p>Once all raw logs are uploaded, click \"More info\" and enable the \"Preserved\" option to preserve the route.</p> </li> <li>Attach the route ID in your issue submission.</li> </ol>"},{"location":"community/reporting-a-bug/#checklist","title":"Checklist","text":"<p>Thanks for following the guide and creating a high-quality and complete bug report \u2013 you are almost done. The checklist ensures that you have read this guide and have worked to your best knowledge to provide us with everything we need to know to help you.</p> <ul> <li> I have upgraded to the latest release version of sunnypilot.</li> <li> I have removed or disable any customizations and confirmed the bug persists.</li> <li> I have searched the documentation, issue trackers, and Discord for similar issues.</li> <li> I have created a minimal reproduction and noted my comma Dongle ID.</li> <li> I have shared my Dongle ID with sunnypilot at <code>support@sunnypilot.ai</code>.</li> <li> I have filled out all required sections of the issue template.</li> <li> I have followed this guide and ensured all necessary information is included.</li> </ul> <p>We'll take it from here.</p> <ol> <li> <p>We might be using terminology in our documentation different from yours, but we mean the same. When you include the  search terms and related links in your bug report, you help us to adjust and improve the documentation.\u00a0\u21a9</p> </li> <li> <p>Sometimes, users report bugs on our sunnypilot's issue tracker or Discord  that are caused by one of our upstream dependencies, including comma's openpilot, comma's panda, or other openpilot forks' dependencies. A good rule of thumb is to reproduce the issue with stock openpilot in the same conditions and check if the problem persists. If it does, the problem is likely not related to sunnypilot and should be reported upstream. When in doubt, use our Discord to ask for help.\u00a0\u21a9</p> </li> </ol>"},{"location":"community/reporting-a-docs-issue/","title":"Documentation issues","text":"<p>Our documentation is composed of many pages and includes extensive information on features, configurations, customizations, and much more. If you have found an inconsistency or see room for improvement, please follow this guide to submit an issue on our issue tracker.</p>"},{"location":"community/reporting-a-docs-issue/#issue-template","title":"Issue template","text":"<p>Reporting a documentation issue is usually less involved than reporting a bug. Please thoroughly read this guide before creating a new documentation issue, and provide the following information as part of the issue:</p> <ul> <li>Title</li> <li>Description</li> <li>Related links</li> <li>Proposed change optional</li> <li>Checklist</li> </ul>"},{"location":"community/reporting-a-docs-issue/#title","title":"Title","text":"<p>A good title should be a short, one-sentence description of the issue, contain all relevant information and, in particular, keywords to simplify the search in our issue tracker.</p> Example Clear Clarify Speed Limit Control engagement Unclear Missing information in the docs Useless Help"},{"location":"community/reporting-a-docs-issue/#description","title":"Description","text":"<p>Provide a clear and concise summary of the inconsistency or issue you encountered in the documentation or the documentation section that needs improvement. Explain why you think the documentation should be adjusted and describe the severity of the issue:</p> <ul> <li> <p>Keep it short and concise \u2013 if the inconsistency or issue can be     precisely explained in one or two sentences, perfect. Maintainers and future     users will be grateful for having to read less.</p> </li> <li> <p>One issue at a time \u2013 if you encounter several unrelated inconsistencies,     please create separate issues for them. Don't report them in the same issue     \u2013 it makes attribution difficult.</p> </li> </ul> <p>Why we need this</p> <p>Describing the problem clearly and concisely is a prerequisite for improving our documentation \u2013 we need to understand what's wrong, so we can fix it.</p>"},{"location":"community/reporting-a-docs-issue/#related-links","title":"Related links","text":"<p>After you described the documentation section that needs to be adjusted above, we now ask you to share the link to this specific documentation section and other possibly related sections. Make sure to use anchor links (permanent links) where possible, as it simplifies discovery.</p> <p>Why we need this</p> <p>Providing the links to the documentation help us understand which sections of our documentation need to be adjusted, extended, or overhauled.</p>"},{"location":"community/reporting-a-docs-issue/#proposed-change","title":"Proposed change optional","text":"<p>Now that you have provided us with the description and links to the documentation sections, you can help us, maintainers, and the community by proposing an improvement. You can sketch out rough ideas or write a concrete proposal. This field is optional but very helpful.</p> <p>Why we need this</p> <p>An improvement proposal can be beneficial for other users who encounter the same issue, as they offer solutions before we maintainers can update the documentation.</p>"},{"location":"community/reporting-a-docs-issue/#checklist","title":"Checklist","text":"<p>Thanks for following the guide and providing valuable feedback for our documentation \u2013 you are almost done. The checklist ensures that you have read this guide and have worked to your best knowledge to provide us with every piece of information we need to improve it.</p> <ul> <li> I have provided a clear and descriptive title for the documentation issue.</li> <li> I have summarized the inconsistency or issue concisely in the description.</li> <li> I have included links to the specific documentation section(s) that need       adjustments.</li> <li> (Optional) I have proposed a change or improvement to the documentation.</li> <li> I have followed this guide and ensured all necessary information is included.</li> </ul> <p>We'll take it from here.</p>"},{"location":"features/auto-lane-change/","title":"Auto Lane Change","text":"<p>sunnypilot's Auto Lane Change feature allows the vehicle to automatically change lanes with minimal driver input.</p>"},{"location":"features/auto-lane-change/#key-setting-and-how-to-use","title":"Key Setting and How to Use","text":"<ul> <li>Nudge to Confirm: This is the default method. To perform a lane change, activate the turn signal in the desired direction and then gently turn the steering wheel (nudges) in the same direction to confirm the maneuver.</li> <li>Nudge-less Lane Change: For a more automated experience, users can enable a \"nudge-less\" option. With this setting, you only need to activate the turn signal to initiate a lane-change.</li> <li>Nudge-less with Delay This is same as Nudge-less mode, but with a fixed delay. Once the turn-indicator is activated, sunnypilot will wait for the selected delay before initiating the lane change.</li> </ul>"},{"location":"features/auto-lane-change/#additional-related-settings","title":"Additional Related Settings","text":"<ul> <li>Delay with Blind Spot: This crucial safety feature adds a delay to the lane change if the vehicle's blind spot monitoring (BSM) system detects an object. The lane change will only proceed after the blind spot is clear.</li> </ul>"},{"location":"features/auto-lane-change/#important-considerations","title":"Important Considerations","text":"<ul> <li>Manual Override: The driver can regain control at any time by taking control of the steering wheel.</li> <li>Driver Monitoring: sunnypilot utilizes driver monitoring to ensure the driver remains attentive.</li> <li>Object Detection: The system is primarily designed to follow lane lines and may not detect all objects. The driver must always be prepared to take control.</li> <li>Lane Markings: The feature's performance is dependent on clear and visible lane markings.</li> </ul>"},{"location":"features/custom-acc-increments/","title":"Custom ACC Increments","text":"<p>sunnypilot offers a feature to customize the speed increments for Adaptive Cruise Control (ACC) when sunnypilot is controlling the vehicle's longitudinal movement (Cruise Control). This allows for more precise speed adjustments compared to the default behavior of many vehicles.</p> <ul> <li>Short press: This controls the speed adjustment when the \"RES+\" or \"SET-\" button is pressed for a short period of time.</li> <li>Allowed values: 1 through 10</li> <li>Long press: This controls the speed adjustment when the \"RES+\" or \"SET-\" button is pressed for a longer duration.</li> <li>Allowed values: 1, 5, 10</li> </ul>"},{"location":"features/dynamic-experimental-control/","title":"Dynamic Experimental Control (DEC)","text":"<p>Dynamic Experimental Control (DEC) intelligently switches between the standard adaptive cruise control and the end-to-end longitudinal control of Experimental Mode based on the driving conditions.</p> <p>Chill Mode is the standard adaptive cruise control method. It is designed to provide a smooth, predictable driving experience. However, it does not provide advanced driving capabilities like stopping at red lights and stop signs.</p> <p>Experimental Mode allows the system to control the vehicle's speed, enabling it to slow down for turns, stop at red lights, and stop signs. While powerful, this mode can sometimes be overly cautious, especially on highways.</p> <p>DEC aims to provide the best of both worlds: the advanced capabilities of Experimental Mode when needed, and the smooth, predictable behavior of the standard system for less complex driving scenarios. This allows for a more natural driving experience by using Experimental Mode in situations where it excels, such as city driving and tight turns, while reverting to the default behavior for highway driving.</p>"},{"location":"features/hyundai-longitudinal-tuning/","title":"How custom longitudinal tuning works for Hyundai/Kia/Genesis vehicles in sunnypilot.","text":"<p>To begin this documentation, I would like to first present the safety guidelines followed to create the tune:</p> <p>Our main safety guideline considered is ISO 15622:2018 This provides the groundwork of safety limits this tune must adhere too, and therefore, must be followed. For example, in our jerk calculations throughout this tune, you will see how maximum jerk is clipped using the equation provided.</p> <p>In the tuning you will see a set of equations, the first being jerk, but what exactly is jerk? Jerk is calculated by taking current acceleration (in the form of m/s^2), subtracting that by previous acceleration, and dividing that by time. In our tune you will see the following equation:</p> <pre><code>planned_accel = CC.actuators.accel\ncurrent_accel = CS.out.aEgo\nblended_value = 0.67 * planned_accel + 0.33 * current_accel\ndelta = blended_value - self.state.accel_last_jerk\n\nself.state.jerk = math.copysign(delta * delta, delta)\nself.state.accel_last_jerk = blended_value\n</code></pre> <p>Instead of using a hardcoded time, we are focused on making jerk parabolic. First we have our planned acceleration from longitudinal_planner. Then we have our current carstate acceleration. These are then blended together 67:33 = 100% to form our blended value. Following this, we have our delta which subtracts our blended_value from our previous acceleration <code>self.state.accel_last_jerk</code> Lastly, we have our finalized jerk calculation, which squares the delta to create a parabolic response while retaining the original sign, which could be positive or negative (e.g., 5.0 or -5.0). This then goes through our minimum and maximum clipping which forces a value between our set min and max, which I discuss later in this readme.</p> <p>Moving on, the accel_last_jerk, stores current accel after each iteration and uses that in the calculation as previous accel for our jerk calculations. Now we see the calculation of jerk max and jerk min. </p>"},{"location":"features/hyundai-longitudinal-tuning/#lets-dive-into-how-jerk-lower-limit-max-is-calculated","title":"Let's dive into how jerk lower limit max is calculated:","text":"<pre><code> velocity = CS.out.vEgo\nif velocity &lt; 5.0:\n  decel_jerk_max = self.car_config.jerk_limits[1]\nelif velocity &gt; 20.0:\n  decel_jerk_max = 2.5\nelse:\n  decel_jerk_max = 3.64284 - 0.05714 * velocity\n</code></pre> <p>This equation above is set by ISO 15622, and dictates that jerk lower limit can only be five when below 5 m/s. In our equation,</p> <pre><code>self.car_config.jerk_limits[1]\n</code></pre> <p>Jerk_limits[1] represents a jerk value of 3.3 m/s^3, which is the maximum analyzed lower jerk rate seen on stock SCC CAN. Between 5 m/s and 20 m/s jerk is capped using the calculation:</p> <pre><code>decel_jerk_max = 3.64284 - 0.05714 * velocity\n</code></pre> <p>This equation calculates the linear jerk from 6m/s to 19m/s, scaling down from 3.3 to 2.5 m/s^3. This means that if current velocity is say, 15 m/s the final jerk max value would be capped at 2.78 m/s^3. Anything above 20 m/s is capped to a lower jerk max of 2.5 m/s^3. This allows for a smoother jerk range, while complying to ISO standards to a tee. The current jerk Lower Limit you will see in openpilot before this tune, is 5.0 m/s^3; Which as you can see from using the above calculation, the 5.0 m/s^3 technically does not comply with ISO standards at any speed above 5.0 m/s^3. Having our jerk max be clipped to these values not only allows for better consistency with ISO standards,  but also enables us to have a much smoother braking experience.</p>"},{"location":"features/hyundai-longitudinal-tuning/#getting-into-our-next-topic-i-would-like-to-explain-how-our-minimum-jerk-was-chosen","title":"Getting into our next topic, I would like to explain how our minimum jerk was chosen.","text":"<p>Minimum jerk was chosen based off of the following guideline proposed by Handbook of Intellegent Vehicles (2012): <code>Ride comfort may be sacrificed only under emergency conditions when vehicle and occupant safety consideration may preclude comfort.</code></p>"},{"location":"features/hyundai-longitudinal-tuning/#what-the-value-of-053-ms3-of-the-jerk-lower-limit-was-chosen-based-off-of","title":"What the value of 0.53 m/s^3 of the jerk lower limit was chosen based off of","text":"<p>Carlowitz et al. (2024). This research study identified the average lower jerk used in comfortable driving settings, which is 0.53 m/s^3. This is then inputted to jerk_limits[0] as 0.53 m/s^3 represents the value used in upper jerk absolute minimum.</p> <pre><code> min_lower_jerk = self.car_config.jerk_limits[0]\n</code></pre> <p>As shown above, lower jerk minimum of 0.53 is used for our lower_jerk minimum bounds.</p>"},{"location":"features/hyundai-longitudinal-tuning/#why-our-minimum-upper-jerk-is-conditional","title":"Why our minimum upper jerk is conditional","text":"<p>Our minimum upper band jerk is conditional as well and is denoted below:</p> <pre><code>min_upper_jerk = self.car_config.jerk_limits[0] if (velocity &gt; 3.611) else 0.60\n</code></pre> <p>This means that for speeds under 3.611 m/s (8.077 mph/ 13 kph) we have a minimum jerk of 0.60. This allows for smooth takeoffs while not causing lag. For all other speeds, we use our normal jerk_limit for minimum, which is 0.53.</p>"},{"location":"features/hyundai-longitudinal-tuning/#next-we-have-our-acceleration-limiting","title":"Next, we have our acceleration limiting","text":"<p>For acceleration limiting, we use TCS signal brakeLightsDEPRECATED to measure when to enact the standstill delay  which stock SCC uses to allow smoother transitions in acceleration.</p>"},{"location":"features/hyundai-longitudinal-tuning/#lastly-we-have-our-accel-value-calculations-for-hyundaicanpy","title":"Lastly, we have our accel value calculations for hyundaican.py","text":"<p>For our accel value calculations we have the following:</p> <p><code>self.accel_value = np.clip(self.accel_raw, self.state.accel_last - jerk_number, self.state.accel_last + jerk_number)</code></p> <p>This essentially means that we have our accel_raw, which is acceleration (m/s^2), followed by our clipping variables.  jerk_number in this equation represents exactly <code>0.1</code>, which is subtracted or added by self.state.accel_last, which is  previous calculated accel_value. Furthermore, we have <code>self.state.accel_last</code>, which is calculated as the stored accel from the above calculations.</p>"},{"location":"features/icbm/","title":"ICBM (Intelligent Cruise Button Management)","text":"<p>Intelligent Cruise Button Management (ICBM) is a system designed to manage the vehicle's speed by sending cruise control button commands to the car's computer.</p> <p>This feature is particularly useful in vehicles where direct control over acceleration and braking by third-party software would disable important safety systems like Automatic Emergency Braking (AEB) and Forward Collision Warning (FCW). By simulating button presses to adjust the stock cruise control, sunnypilot's ICBM can manage the car's speed while keeping these native safety features active.</p> <p>This also allows the vehicle to use the following features:</p> <ul> <li>Smart Cruise Control - Vision (SCC-V): Adjusts the vehicle's speed for smoother and safer navigation through curves based on curvature information from camera vision.</li> <li>Smart Cruise Control - Map (SCC-M): Adjusts the vehicle's speed for smoother and safer navigation through curves based on curvature information from OpenStreetMap.</li> <li>Speed Limit Assist (SLA): Intelligently adjusts the vehicle's speed based on detected speed limits from various sources.</li> </ul>"},{"location":"features/mads/","title":"Modular Assistive Driving Safety (M.A.D.S.)","text":"<p>Modular Assistive Driving Safety (MADS) aims to elevate the user's driving experience by modifying the behaviors of  driving assist engagements.</p> <p>Note</p> <p>This feature aligns closely with comma.ai's safety rules.</p>"},{"location":"features/mads/#independent-engagement","title":"Independent Engagement","text":"<p>MADS allows users to engage sunnypilot Automatic Lane Centering (ALC) for lateral control and Adaptive Cruise Control  (ACC) or Smart Cruise Control (SCC) for longitudinal control independently.</p> Why This Feature Exists <p>While newer car models allow for independent engagement of lateral (steering) and longitudinal (speed) control,  many older models and stock openpilot enforce engaging both controls together. MADS introduces this modern  convenience to older models, effectively backporting a feature found in newer cars and providing users more flexibility.</p>"},{"location":"features/mads/#dedicated-buttons","title":"Dedicated Buttons","text":""},{"location":"features/mads/#toggle-for-sunnypilot-alc","title":"Toggle for sunnypilot ALC","text":"<ul> <li><code>CRUISE (MAIN)</code> button: Available on all supported cars on sunnypilot.</li> <li><code>LFA</code> button: Available on newer HKG cars.</li> <li><code>LKAS</code> button: Available on Honda, Toyota, and Global Subaru.</li> </ul>"},{"location":"features/mads/#engagement","title":"Engagement","text":"<ul> <li><code>SET-</code> button: Enables ACC/SCC.</li> <li><code>CANCEL</code> button: Disables ACC/SCC only.</li> <li><code>CRUISE (MAIN)</code> must be <code>ON</code> to use ACC/SCC.</li> </ul> <p>Info</p> <p>The <code>CRUISE (MAIN)</code> button disables sunnypilot completely when <code>OFF</code>. This is strictly enforced in the panda safety code.</p>"},{"location":"features/mads/#lateral-control-on-brake-pedal","title":"Lateral Control on Brake Pedal","text":"<p>Dedicated toggle to handle Lateral state on brake pedal press and release:</p> <ul> <li>ON: Pressing the <code>BRAKE pedal</code> will pause Automatic Lane Centering.</li> </ul>"},{"location":"features/nnlc/","title":"NNLC (Neural Network Lateral Control)","text":"<p>sunnypilot's Neural Network Lateral Control (NNLC) is a feature that enhances the system's ability to steer a vehicle. It enhances the standard lateral controller with one based on a neural network trained on the vehicle's torque data, aiming for smoother and more precise steering adjustments.</p>"},{"location":"features/nnlc/#key-aspects-of-nnlc","title":"Key Aspects of NNLC","text":"<ul> <li>Improved Accuracy: The neural network is trained using driving data specific to each vehicle, which allows for more accurate control.</li> <li>Smoother Turns: NNLC inputs past curvature data into its driving model to achieve smoother and more precise lateral control, especially noticeable when taking curves on a highway. Users report that it reduces the oversteering and understeering corrections.</li> </ul> <p>Formerly known as \"NNFF\" (Neural Network Feedforward), NNLC aims to make the driving experience feel more natural and less \"jittery\" in turns.</p>"},{"location":"features/scc-m/","title":"Smart Cruise Control - Map (SCC-M)","text":"<p>Smart Cruise Control - Map (SCC-M) leverages map data to proactively adjust your vehicle's speed by calculating curvature in the road ahead.</p> <p>Note</p> <p>This feature requires OpenStreetMap data for the current location to be downloaded.</p>"},{"location":"features/scc-v/","title":"Smart Cruise Control - Vision (SCC-V)","text":"<p>Smart Cruise Control - Vision (SCC-V) leverages camera vision data to proactively adjust your vehicle's speed by calculating curvature in the road ahead.</p> <p>Note</p> <p>This feature is only available when sunnypilot is actively controlling the vehicle's longitudinal movement.</p>"},{"location":"features/speed-limit-assist/","title":"Speed Limit Assist (SLA)","text":"<p>Speed Limit Assist (SLA) is a comprehensive framework in sunnypilot that adjusts the vehicle's set cruise speed according to detected speed limits. It reconciles data from multiple sources to determine the current speed limit.</p>"},{"location":"features/speed-limit-assist/#core-functionality","title":"Core Functionality","text":"<p>SLA utilizes various data sources to determine the speed limit for the current road:</p> <ul> <li>OpenStreetMap (OSM): Utilizes map data to fetch speed limits. sunnypilot has a refactored OSM implementation for lower resource usage and provides weekly updates.</li> <li>Car's Stock System: On some compatible vehicles, it can pull speed limit data directly from the car's native system.</li> </ul>"},{"location":"features/speed-limit-assist/#key-features-and-customization","title":"Key Features and Customization","text":"<p>sunnypilot offers extensive customization for its speed control features:</p> <ul> <li>Selectable Speed Limit Source: Users can define the priority of data sources (e.g., OSM, Navigation, Vision) for determining the speed limit.</li> <li>Configurable Offsets: You can set an offset above the detected speed limit, either as a fixed value (e.g., +5 mph) or a percentage.</li> <li>Engagement Modes:<ul> <li>Auto: Automatically adjusts the cruise speed when a new speed limit is detected.</li> <li>User Confirm: Informs the driver of the new speed limit and waits for them to confirm the change before adjusting the speed.</li> </ul> </li> <li>Alerts and Warnings: The system provides alerts to inform the driver before a speed adjustment occurs.</li> </ul>"},{"location":"getting-started/develop-sunnypilot/","title":"To start developing sunnypilot","text":"<p>sunnypilot is a fork of commaai's openpilot, developed by sunnypilot and by users like you.  We welcome both pull requests and issues on GitHub.</p> <ul> <li>Join the community Discord</li> <li>Check out the contributing docs</li> <li>Check out the openpilot tools</li> <li>Read about the development workflow</li> </ul>"},{"location":"getting-started/use-sunnypilot-in-a-car/","title":"To start using sunnypilot in a car","text":"<p>To use sunnypilot in a car, you need four things:</p> <ol> <li> <p>Supported Device: a comma 3/3X, available at comma.ai/shop.</p> </li> <li> <p>Software: The setup procedure for the comma 3/3X allows users to enter a URL for custom software. Use the URL <code>release-c3.sunnypilot.ai</code> to install the release version.</p> </li> <li> <p>Supported Car: Ensure that you have one of the 275+ supported cars.</p> </li> <li> <p>Car Harness: You will also need a car harness to connect your comma 3/3X to your car.</p> </li> </ol> <p>comma.ai have detailed instructions for how to install the harness and device in a car.</p> <p>Note</p> <p>It's possible to run sunnypilot on other hardware, although it's not plug-and-play.</p>"},{"location":"getting-started/what-is-sunnypilot/","title":"What is sunnypilot?","text":"<p>sunnypilot is a fork of comma.ai's openpilot, an open source driver assistance system. sunnypilot offers the user a unique driving experience for over 250+ supported car makes and models with modified behaviors of driving assist engagements. sunnypilot complies with comma.ai's safety rules as accurately as possible.</p>"},{"location":"getting-started/what-is-sunnypilot/#how-do-i-use-it","title":"How do I use it?","text":"<p>sunnypilot is designed to be used on the comma 3/3X.</p>"},{"location":"getting-started/what-is-sunnypilot/#how-does-it-work","title":"How does it work?","text":"<p>In short, sunnypilot uses the car's existing APIs for the built-in ADAS system and simply provides better acceleration, braking, and steering inputs than the stock system.</p>"},{"location":"safety-information/prohibited-safety-modifications/","title":"Prohibited Safety Modifications","text":"<p>All official sunnypilot branches strictly adhere to comma.ai's safety policy. Any changes that go against  this policy will result in your fork and your device being banned from both comma.ai and sunnypilot channels.</p> <p>The following changes are VIOLATIONS of the safety policy and ARE NOT supported in any official sunnypilot branches:</p> <p>Driver Monitoring</p> <ul> <li>\"Nerfing\" or reducing monitoring parameters.</li> </ul> <p>Panda Safety</p> <ul> <li>No preventing disengaging of longitudinal control (positive/negative acceleration) on brake pedal press.</li> <li>No auto re-engaging of longitudinal control (positive/negative acceleration) on brake pedal release.</li> <li>No disengaging on <code>CRUISE MAIN</code> in <code>OFF</code> state.</li> </ul>"},{"location":"setup/read-before-installing/","title":"\ud83d\udea8 Read Before Installing","text":"<p>It is recommended to read the entire documentation before proceeding. This will ensure that you fully understand each added feature in sunnypilot. This also ensures that you are choosing the correct settings and branch for your car to have the best driving experience.</p> <p>Warning</p> <p>By installing this software, you accept all responsibility for anything that might occur while you use it. sunnypilot and all contributors to sunnypilot are not liable.</p> <p>Use at your own risk.</p>"},{"location":"setup/read-before-installing/#installation","title":"Installation","text":"<p>Please refer to the Recommended Branches to find your preferred/supported branch. This guide will assume you want to install the latest <code>release-c3</code> branch.</p> <p>You can install sunnypilot on your comma 3/3X using one of the following methods:</p>"},{"location":"setup/read-before-installing/#url-method-directly-on-device","title":"URL Method (Directly on Device)","text":"<p>This method allows you to install sunnypilot directly from your device's screen using a provided URL. It's simple and user-friendly, requiring no additional tools or external devices.</p>"},{"location":"setup/read-before-installing/#ssh-method-command-line","title":"SSH Method (Command Line)","text":"<p>This method is for advanced users who prefer to use SSH to clone the sunnypilot repository and install it manually via the command line. It offeres greater control over the installation process.</p>"},{"location":"setup/ssh-method/","title":"SSH Method","text":"<p>If you are looking to install sunnypilot via SSH, run the following commands in an SSH terminal after connecting to your comma 3/3X:</p> <ol> <li> <p>Navigate to <code>data</code> directory     <pre><code>cd /data\nrm -rf openpilot\n</code></pre></p> </li> <li> <p>Clone sunnypilot</p> <p><code>staging</code> branch is used in this step as an example.</p> <pre><code>git clone -b staging --recurse-submodules https://github.com/sunnypilot/sunnypilot.git openpilot\n</code></pre> </li> <li> <p>Git LFS     <pre><code>cd openpilot\ngit lfs pull\n</code></pre></p> </li> <li> <p>Reboot     <pre><code>sudo reboot\n</code></pre></p> </li> </ol>"},{"location":"setup/url-method/","title":"URL Method","text":"<p>The URL installation method can be done in two ways, depending on your device &amp; if you already have sunnypilot installed.</p> sunnypilot not installedsunnypilot already installed <ol> <li>Factory reset/uninstall the previous software if you have another software/fork installed.</li> <li>After factory reset/uninstall, upon reboot, select <code>Custom Software</code> when given the option.</li> <li>Input the Installation URL per Recommended Branches.</li> <li>Complete the rest of the installation by following the onscreen instructions.</li> </ol> <ol> <li>On the comma 3/3X, go to <code>Settings</code> \u2192 <code>Software</code>.</li> <li>At the <code>Download</code> option, press <code>CHECK</code>. This will fetch the list of latest branches from the sunnypilot repository on GitHub.</li> <li>At the <code>Target Branch</code> option, press <code>SELECT</code> to open the <code>Target Branch</code> selector.</li> <li>Scroll and select the Desired Branch per Recommended Branches.</li> </ol>"}]}